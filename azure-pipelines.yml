# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- feature-ms-guillermoEchague-DevOpsConfigurationJava

pool: 
  vmImage: ubuntu-latest

steps:

- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false
  displayName: Build Project



- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'guillermoechague'
    scannerMode: 'Other'
    extraProperties: |
      # Additional properties that will be passed to the scanner,
      # Put one key=value per line, example:
      # sonar.exclusions=**/*.bin
      sonar.projectKey=guillermoechague_tarea-devops-foundation
      sonar.projectName=tarea-devops-foundation
  displayName: Prepare SonarCloud Analysis


- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'sonarqube'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: true
    sqGradlePluginVersionChoice: 'specify'
    sonarQubeGradlePluginVersion: '3.3'
    spotBugsAnalysis: false
  displayName: SonarCloud Analysis



- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'


stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: CodeCoverage
        displayName: Code Coverage
        pool:
          vmImage: 'ubuntu-16.04'

        steps:
          - task: Maven@3
            displayName: 'Maven Test'
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'test'

          - task: PublishTestResults@2
            displayName: 'Publish test results'
            inputs:
              testResultsFormat: 'JUnit'
              mergeTestResults: true # Optional

          - task: PublishCodeCoverageResults@1
            displayName: 'Publish publish code coverage'
            inputs:
              summaryFileLocation: $(System.DefaultWorkingDirectory)/target/site/jacoco/jacoco.xml
              pathToSources: $(System.DefaultWorkingDirectory)/src/main/java/


- task: Docker@2
  inputs:
    containerRegistry: 'docker-tarea'
    command: 'login'
  displayName: Docker Login

- task: Docker@2
  inputs:
    containerRegistry: 'docker-tarea'
    repository: 'echaguiller/tarea-devops'
    command: 'build'
    Dockerfile: '**/Dockerfile'
  displayName: Docker Build Image

- task: Docker@2
  inputs:
    containerRegistry: 'docker-tarea'
    repository: 'echaguiller/tarea-devops'
    command: 'push'
    Dockerfile: '**/Dockerfile'
  displayName: Docker Push

- task: KubectlInstaller@0
  inputs:
    kubectlVersion: 'latest'
  displayName: Instalacion Kubectl
      
- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'kubernets'
    namespace: 'default'
    command: 'login'
  displayName: AKS Login

    

