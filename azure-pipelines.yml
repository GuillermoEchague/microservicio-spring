# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- feature-ms-guillermoEchague-DevOpsConfigurationJava

pool:
  vmImage: ubuntu-latest

steps:
- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false
  displayName: Build Project

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'guillermoechague'
    scannerMode: 'Other'
    extraProperties: |
      # Additional properties that will be passed to the scanner,
      # Put one key=value per line, example:
      # sonar.exclusions=**/*.bin
      sonar.projectKey=guillermoechague_tarea-devops-foundation
      sonar.projectName=tarea-devops-foundation
  displayName: Prepare SonarCloud Analysis

- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: 'latest'
  displayName: SonarCloud Analysis

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: Docker@2
  inputs:
    containerRegistry: 'docker-tarea'
    command: 'login'
  displayName: Docker Login

- task: Docker@2
  inputs:
    containerRegistry: 'docker-tarea'
    repository: 'echaguiller/tarea-devops'
    command: 'build'
    Dockerfile: '**/Dockerfile'
  displayName: Docker Build Image

- task: Docker@2
  inputs:
    containerRegistry: 'docker-tarea'
    repository: 'echaguiller/tarea-devops'
    command: 'push'
    Dockerfile: '**/Dockerfile'
  displayName: Docker Push

- task: KubectlInstaller@0
  inputs:
    kubectlVersion: 'latest'


- task: Kubernetes@1
  inputs:
    connectionType: 'None'
    namespace: 'default'
    command: 'apply'
    arguments: '-f deployment.yaml'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'